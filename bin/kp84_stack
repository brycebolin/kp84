#!/usr/bin/env python

import os, sys, optparse, shutil, glob, copy
import numpy as np
from astropy.io import fits

from skimage.feature import register_translation
import image_registration

#fitsfiles = glob.glob("/Users/mcoughlin/Code/KP84/observing/20180627/ZTFHC7_10_g_20180627_080418.036682*.fits")
#fitsfile_stack = "/Users/mcoughlin/Code/KP84/observing/ZTFHC7_10_g_20180627_080418.036682_o_stack.fits"
#fitsfiles = fitsfiles[:5]

fitsfiles = ["/Users/mcoughlin/Code/KP84/observing/20180804/ZTFHC10_10_g_20180804_042052.034227_o/registration/ZTFHC10_10_g_20180804_042052.034227_o.fits"]
fitsfile_stack = "/Users/mcoughlin/Code/KP84/observing/stack.fits"

fitsfiles = sorted(glob.glob("/Users/mcoughlin/Code/KP84/observing/20180807/NGC45-LRN_10_r_20180807_111121.034742_o/registration/*.fits"))
fitsfile_stack = "/Users/mcoughlin/Code/KP84/observing/20180807/NGC45-LRN_10_r_20180807_111121.034742_o/stack.fits"

fitsfiles = sorted(glob.glob("/Users/mcoughlin/Code/KP84/observing/20180807/NGC45-LRN_10_g_20180807_111751.035561_o/registration/*.fits"))
fitsfile_stack = "/Users/mcoughlin/Code/KP84/observing/20180807/NGC45-LRN_10_g_20180807_111751.035561_o/stack.fits"

fitsfiles = sorted(glob.glob("/Users/mcoughlin/Code/KP84/observing/20180807/NGC45-LRN_10_I_20180807_112446.034657_o/registration/*.fits"))
fitsfile_stack = "/Users/mcoughlin/Code/KP84/observing/20180807/NGC45-LRN_10_I_20180807_112446.034657_o/stack.fits"

hdulist2 = []
cnt = 1
for jj in range(len(fitsfiles)):
    print(jj,fitsfiles[jj])
    fitsfile = fitsfiles[jj]
    hdulist = fits.open(fitsfile)
    for ii in range(len(hdulist)):
        if ii == 0: continue
        if cnt == 1:
            hdulist_hold = copy.copy(hdulist[ii])
            xshape, yshape = hdulist_hold.data.shape
            data = np.empty([xshape,yshape,0])
            reference = hdulist[ii].data
        shift, error, diffphase = register_translation(reference, hdulist[ii].data, upsample_factor=1)
        shifted = image_registration.fft_tools.shiftnd(hdulist[ii].data, (shift[0], shift[1]))
        data = np.append(data,np.expand_dims(shifted,axis=2),axis=2)
        cnt = cnt + 1            

hdulist_hold.data = np.mean(data,axis=2)
hdulist2 = fits.HDUList(hdus=hdulist_hold)
hdulist2.writeto(fitsfile_stack,output_verify='fix',overwrite=True)


