#!/usr/bin/env python

import os, sys, optparse, shutil, glob, copy
import numpy as np
from astropy.io import fits

from skimage.feature import register_translation
import image_registration

def parse_commandline():
    """
    Parse the options given on the command-line.
    """
    parser = optparse.OptionParser()

    parser.add_option("-i","--inputfiles",default="/Users/mcoughlin/Desktop/PTF1615ap_1_r_20181005_021345.013321_o*")
    parser.add_option("-o","--outputfile",default="/Users/mcoughlin/Desktop/PTF1615ap_1_r_20181005_021345.013321_o_stack.fits")

    opts, args = parser.parse_args()

    return opts

opts = parse_commandline()
inputfiles = opts.inputfiles
outputfile = opts.outputfile
fitsfiles = sorted(glob.glob(inputfiles))

hdulist2 = []
cnt = 1
for jj in range(len(fitsfiles)):
    print(jj,fitsfiles[jj])
    fitsfile = fitsfiles[jj]
    hdulist = fits.open(fitsfile)
    for ii in range(len(hdulist)):
        if ii == 0: continue
        if np.mod(ii,10) == 0:
            print("%d/%d"%(ii,len(hdulist)))
        if cnt == 1:
            hdulist_hold = copy.copy(hdulist[ii])
            xshape, yshape = hdulist_hold.data.shape
            data = np.empty([xshape,yshape])
            reference = hdulist[ii].data
        shift, error, diffphase = register_translation(reference, hdulist[ii].data, upsample_factor=1)
        shifted = image_registration.fft_tools.shiftnd(hdulist[ii].data, (shift[0], shift[1]))
        #data = np.append(data,np.expand_dims(shifted,axis=2),axis=2)
        data = data + shifted
        cnt = cnt + 1            

hdulist_hold.data = data
#hdulist_hold.data = np.mean(data,axis=2)
hdulist2 = fits.HDUList(hdus=hdulist_hold)
hdulist2.writeto(outputfile,output_verify='fix',overwrite=True)


